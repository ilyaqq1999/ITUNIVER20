@using ItUniver.Tasks.Web.Models

@model TasksModel

@{
    ViewData["Title"] = "Список задач";
    var createUrl = Url.Action("Add", "Task");
}

<div class="card">
    <div class="card-header">
        Список задач
        <a style="float: right;" href="@createUrl" type="button" class="btn btn-primary">Добавить задачу</a>
    </div>
    <div class="card-body">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active" data-toggle="tab" href="#incoming">Входящие</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#outgoing">Созданные мной</a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane fade show active" id="incoming">
                <table class="table table-borderless">
                    @foreach (var task in Model.Incoming)
                    {
                        <tr>
                            <td style="padding-left: 0px; padding-right: 0px;">
                                @await Html.PartialAsync("Task/RowDetails", task)
                            </td>
                        </tr>
                    }
                </table>
            </div>
            <div class="tab-pane fade" id="outgoing">
                <table class="table table-borderless">
                    @foreach (var task in Model.Outgoing)
                    {
                        <tr>
                            <td style="padding-left: 0px; padding-right: 0px;">
                                @await Html.PartialAsync("Task/RowDetails", task)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/view-resources/task/scripts.js"></script>
}